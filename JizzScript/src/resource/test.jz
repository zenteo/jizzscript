// math package

pack math {
	// A constant is also a variable
	PI = 3.14159264358979323846

	/*
	* A vector is, and will always be, a vector.
	*/
	func Vector {
		// x = $, where the next parameter is $
		// y = $, where the next parameter is $
		$x
		$y
		create = @Vector
		
		// Vector has a function add(vector)
		func add {
			$v
			if (contains v create) == false {
				x += v
				y += $
				return super
			}
			x += v.x
			y += v.y
			return super
		}
		
		// Vector has a function added(vector)
		func added {
			$v
			return Vector x + v.x y + v.y
		}
		
		// Vector has a function equals(vector)
		func equals {
			$v
			return x == v.x && y == v.y
		}
		
		// Vector has a toString method
		func toString {
			return "[" + x + ", " + y + "]"
		}
	}

}

// test package
pack test {
	a = math.Vector 3 5
	b = a.create 2 1
}

pack test {
	jizz.println (a.added b).toString
	jizz.println (a.added b).toString
	
	jizz.println "-----"
	jizz.println (a.add b).toString
	jizz.println (a.add b).toString
}


jizz.println math.sqrt 3.5
i = 0
while i < 1000000 { // 1 000 000
	doNuthing
	i++
}
jizz.println "Done"
